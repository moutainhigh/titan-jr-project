<?xml version="1.0" encoding="utf-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:aop="http://www.springframework.org/schema/aop" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:p="http://www.springframework.org/schema/p" xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:context="http://www.springframework.org/schema/context" xmlns:mvc="http://www.springframework.org/schema/mvc"
	xmlns:dubbo="http://code.alibabatech.com/schema/dubbo"
	   xmlns:jee="http://www.springframework.org/schema/jee"
	   xsi:schemaLocation="http://www.springframework.org/schema/beans
						http://www.springframework.org/schema/beans/spring-beans-4.2.xsd
						http://www.springframework.org/schema/tx
    					http://www.springframework.org/schema/tx/spring-tx-4.1.xsd
						http://www.springframework.org/schema/aop
	       				http://www.springframework.org/schema/aop/spring-aop-4.1.xsd
	       				http://www.springframework.org/schema/context
           				http://www.springframework.org/schema/context/spring-context-4.2.xsd
	       				http://www.springframework.org/schema/mvc
           				http://www.springframework.org/schema/mvc/spring-mvc-4.2.xsd
           				http://code.alibabatech.com/schema/dubbo
           				http://code.alibabatech.com/schema/dubbo/dubbo.xsd
           				http://www.springframework.org/schema/jee
						http://www.springframework.org/schema/jee/spring-jee-2.5.xsd">

	<!-- 开发时使用非jndi数据源 -->
	<!-- dataSource 定义 -->
	<bean id="dataSource" class="com.alibaba.druid.pool.DruidDataSource" destroy-method="close">
		<property name="driverClassName" value="${db.driverClassName}" />
		<property name="url" value="${db.url}" />
		<property name="username" value="${db.username}" />
		<property name="password" value="${db.password}" />
		<property name="maxActive" value="${db.maxActive}" />
		<property name="initialSize" value="${db.initialSize}" />
		<property name="maxWait" value="${db.maxWait}" />
		<property name="minIdle" value="${db.minIdle}" />
		<property name="timeBetweenEvictionRunsMillis" value="${db.timeBetweenEvictionRunsMillis}" />
		<property name="minEvictableIdleTimeMillis" value="${db.minEvictableIdleTimeMillis}" />
		 
		<property name="maxOpenPreparedStatements" value="${db.maxOpenPreparedStatements}" />
		<property name="removeAbandoned" value="${db.removeAbandoned}" />
		<property name="removeAbandonedTimeout" value="${db.removeAbandonedTimeout}" />
		<property name="logAbandoned" value="${db.logAbandoned}" />
	</bean>
	
	<bean id="configDataSource" class="org.apache.commons.dbcp.BasicDataSource"
		  destroy-method="close">
		<property name="driverClassName" value="oracle.jdbc.OracleDriver" />
		<property name="url" value="jdbc:oracle:thin:@192.168.2.38:1521:fangcangdb" />
		<property name="username" value="config" />
		<property name="password" value="config" />
	</bean>
	
	<bean id="orderDataSource" class="org.apache.commons.dbcp.BasicDataSource"
		  destroy-method="close">
		<property name="driverClassName" value="oracle.jdbc.OracleDriver" />
		<property name="url" value="jdbc:oracle:thin:@192.168.2.39:1521:fangcangdb" />
		<property name="username" value="htl_order" />
		<property name="password" value="bf83hfo5" />
	</bean>
	
	
	<bean id="poolConfig" class="redis.clients.jedis.JedisPoolConfig">  
	    <property name="maxIdle" value="${redis.pool.maxIdle}" /> 
	    <property name="maxTotal" value="${redis.pool.maxActive}" />    
	    <property name="maxWaitMillis" value="${redis.pool.maxWait}" />   
	    <property name="testOnBorrow" value="${redis.pool.testOnBorrow}" />  
	    <property name="testOnReturn" value="${redis.pool.testOnReturn}" />  
	</bean>
      
    <bean id="connectionFactory" class="org.springframework.data.redis.connection.jedis.JedisConnectionFactory">  
       <property name="hostName" value="${redis.host}"/>
        <property name="port" value="${redis.port}"/>
        <property name="database" value="${redis.database}"/>
        <property name="password" value="${redis.pass}"/>
        <property name="timeout" value="${redis.timeout}"/>
        <property name="poolConfig" ref="poolConfig"/>
    </bean>

    <bean id="redisTemplate" class="org.springframework.data.redis.core.RedisTemplate">
    	 <property name="connectionFactory" ref="connectionFactory"></property>
   		<property name="keySerializer">
            <bean
                class="org.springframework.data.redis.serializer.StringRedisSerializer" />
        </property>
        <property name="hashKeySerializer">
            <bean
                class="org.springframework.data.redis.serializer.StringRedisSerializer" />
        </property>
        <property name="valueSerializer">
            <bean
                class="org.springframework.data.redis.serializer.JdkSerializationRedisSerializer" />
        </property>
        <property name="hashValueSerializer">
            <bean
                class="org.springframework.data.redis.serializer.JdkSerializationRedisSerializer" />
        </property>
    </bean>
	
	<bean class="com.fangcang.titanjr.util.DistributedLock" scope="prototype">
		<constructor-arg>
			<ref bean="redisTemplate"/>
		</constructor-arg>
	</bean>
	
</beans>

